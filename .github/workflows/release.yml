name: Release

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*' # push tag like "v1.0.3-beta.1" "v1.0.3-rc.1" "v1.0.3"

  workflow_dispatch:
    inputs:
      change-log-cn:
        description: 'Change Log(CN)'
        required: false
        default: ''
      change-log-en:
        description: 'Change Log(EN)'
        required: false
        default: ''
      compare-to:
        description: 'Compare to version for generate diff change log'
        required: false
        default: ''

jobs:
  release:
    environment: auto-release
    runs-on: 'ubuntu-latest'
    env:
      buildEveryTime: 'true'
    steps:

      - name: 'Checkout Source Code'
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: 'Setup ENV'
        run: |
          echo "ActionTriggerBy = ${{ github.event.action }} / ${{ github.event_name }}"

          github_ref="${github_ref////-}"
          github_ref="${github_ref/refs-heads-/}"
          github_ref="${github_ref/refs-tags-/}"
          echo '$github_ref='$github_ref
          echo "GITHUB_TAG=$github_ref" >> $GITHUB_ENV
          # echo "::set-env name=GITHUB_TAG::$github_ref"

          eval "$(node -e 'const v=require("./package.json").version; console.log("pkg_version="+v)')"
          echo '$pkg_version='$pkg_version
          echo "PKG_VERSION=$pkg_version" >> $GITHUB_ENV

          qiniu_upload_path_key=fe/${{ github.repository_owner }}/${{ github.event.repository.name }}/$pkg_version/${{ github.sha }}/
          echo '$qiniu_upload_path_key='$qiniu_upload_path_key
          echo "QINIU_UPLOAD_DEST_PATH=$qiniu_upload_path_key" >> $GITHUB_ENV

          qiniu_public_url=${{ secrets.QINIU_PUBLIC_ORIGIN }}/$qiniu_upload_path_key
          echo '$qiniu_public_url='$qiniu_public_url
          echo "QINIU_PUBLIC_URL=$qiniu_public_url" >> $GITHUB_ENV
        env:
          github_ref: ${{ github.ref }}

      - name: 'Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@onekeyhq'

      - name: 'Get yarn cache directory path'
        id: yarn-cache-dir-path
        shell: bash
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 'Cache yarn'
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'Cache node-modules'
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-yarn-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node-modules-

      - name: 'Install Dependiences'
        if: env.buildEveryTime
        shell: bash
        run: |
          yarn setup
          yarn
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Auto Create Beta Tag'
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        id: auto_create_beta_tag
        uses: onekeyhq/onekey-github-actions/auto-tag@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          prefix: 'v${{ env.PKG_VERSION }}-##date##'
          debug: true
          export-change-log: true
          compare-to: ${{ github.event.inputs.compare-to }}

      - name: 'Update Build File Name'
        run: |
          tag='${{ env.AUTO_CREATE_TAG }}'
          if ! [ $tag ]; then
            tag='${{ env.GITHUB_TAG }}';
          fi
          filename='onekey-extension__'$tag'__${{ env.PKG_VERSION }}'

          echo "GITHUB_TAG=$tag" >> $GITHUB_ENV
          echo "BUILD_FILE_NAME=$filename" >> $GITHUB_ENV
        env:
          AUTO_CREATE_TAG: ${{ steps.auto_create_beta_tag.outputs.current-tag }}

      #      - name: Linting & Test
      #        shell: bash
      #        run: "yarn lint && yarn test"

      - name: 'Building'
        if: env.buildEveryTime
        shell: bash
        run: 'yarn dist'
        env:
          CIRCLE_BRANCH: master
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
          ENV_ON_BOARDING_START_CHOICE: normal,hardware

      - name: 'Zip dist'
        if: env.buildEveryTime
        shell: bash
        run: |
          mkdir -p ./qiniu_upload_dir
          mkdir -p ./builds
          cd ./builds
          touch ./onekey.readme.md
          zip -r ../qiniu_upload_dir/${{ env.BUILD_FILE_NAME }}.zip ./

      - name: 'Upload to CDN'
        if: env.buildEveryTime
        uses: onekeyhq/onekey-github-actions/qiniu-upload@main
        with:
          access_key: ${{ secrets.QINIU_ACCESS_KEY }}
          secret_key: ${{ secrets.QINIU_SECRET_KEY }}
          bucket: ${{ secrets.QINIU_BUCKET }}
          source_dir: ./qiniu_upload_dir
          dest_dir: ${{ env.QINIU_UPLOAD_DEST_PATH }}

      - name: 'Upload Artifacts'
        if: env.buildEveryTime
        uses: actions/upload-artifact@v2
        with:
          name: onekey-extension-${{ env.GITHUB_TAG }}
          path: |
            builds

      - name: 'Get PR Info Action'
        id: pr_info
        uses: onekeyhq/onekey-github-actions/get-pr-info@main
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: 'Build Change Log Content'
        id: build_change_log_content
        env:
          inputChangeLog: '${{ github.event.inputs.change-log-cn }}'
          prChangeLog: '${{ steps.pr_info.outputs.content_body }}'
          prUrl: '${{ steps.pr_info.outputs.url }}'
          tagDiffChangeLog: '${{ steps.auto_create_beta_tag.outputs.change-log }}'
          tagDiffChangeLogUrl: '${{ steps.auto_create_beta_tag.outputs.change-log-url }}'
        run: |
          changeLog='' 

          if [ -n "$inputChangeLog" ]
          then
            changeLog=$changeLog' '$inputChangeLog':-:';
          fi

          if [ -n "$prChangeLog" ]
          then
            changeLog=$changeLog' '$prChangeLog':-:';
          fi

          if [ -n "$prUrl" ]
          then
            changeLog=$changeLog' <'$prUrl'| View PR ↗ > :-:';
          fi

          if [ -n "$tagDiffChangeLogUrl" ]
          then
            changeLog=$changeLog' <'$tagDiffChangeLogUrl'| Change Log Diff ↗ > :-:';
          fi

          if [ -n "$tagDiffChangeLog" ]
          then
            changeLog=$changeLog' '$tagDiffChangeLog':-:';
          fi

          echo $changeLog
          echo '::set-output name=change_log::'$changeLog

      - name: 'Notify to Slack'
        uses: onekeyhq/onekey-github-actions/notice-slack-app-update@main
        with:
          web-hook-url: ${{ secrets.SLACK_WEBHOOK_RELEASE_NOTIFY }}
          artifact-type: Web-FE
          artifact-name: Onekey-Extension
          artifact-bundle-id: '${{ env.PKG_VERSION }} (com.onekey.wallet.extension)'
          artifact-version-name: '${{ env.PKG_VERSION }}@${{ env.GITHUB_TAG }}'
          artifact-version-code: '${{ env.GITHUB_TAG }}'
          artifact-download-url: ${{ env.QINIU_PUBLIC_URL }}${{ env.BUILD_FILE_NAME }}.zip
          change-log: '${{ steps.build_change_log_content.outputs.change_log }}'
          custom-issue-url: '${{ steps.pr_info.outputs.issue }}'
          custom-message-title: ''
          custom-message-payload: ''

      - name: 'Upload to Sentry'
        if: env.buildEveryTime
        shell: bash
        run: |
          yarn sentry:publish
        env:
          SENTRY_ORG: onekey_hq
          SENTRY_PROJECT: ext
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
